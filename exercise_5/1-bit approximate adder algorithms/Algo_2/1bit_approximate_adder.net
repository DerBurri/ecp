* C:\users\maximilianb\Documents\Uni\Master\ECP\exercises\exercise_5\1-bit approximate adder algorithms\Algo_2\1bit_approximate_adder.asc
R1 N013 0 {R_g}
V1 N001 0 PWL file=a.csv
V2 N002 0 PWL file=b.csv
V3 N003 0 PWL file=c.csv
V4 N004 0 PWL file=s1.csv
XX1 a1 N001 N005 vteam_knowm params: w_init=0n
XX2 b1 N002 N006 vteam_knowm params: w_init=3n
XX3 c N003 N007 vteam_knowm params: w_init=3n
XX4 s1 N004 N008 vteam_knowm params: w_init=3n
S6 N013 N005 N009 0 MYSW
S7 N013 N006 N010 0 MYSW
S8 N013 N007 N011 0 MYSW
S9 N013 N008 N012 0 MYSW
V10 N009 0 PWL file=a_sw.csv
V12 N010 0 PWL file=b_sw.csv
V13 N011 0 PWL file=c_sw.csv
V14 N012 0 PWL file=s1_sw.csv

* block symbol definitions
.subckt vteam_knowm s Vp Vn
B1 0 w I=G_on(V(Vp,Vn))*f_on(V(w))
B2 0 w I=G_off(V(Vp,Vn))*f_off(V(w))
C1 w 0 1
D1 w N003 idealD
D2 N004 w idealD
V1 N003 0 {w_off}
V2 N004 0 {w_on}
R1 N001 0 {R_on}
Fv N002 Vn Bm -1
Bm N001 0 V=vs(V(Vp,Vn),V(w))
E1 s 0 w 0 {1/w_off}
R2 Vp N002 1µ
.param k_off=0.01 v_off=700m alpha_off=3 R_off=1000k w_off=3n
.param k_on=-0.5n v_on=-10m alpha_on=3 R_on=10k w_on=0
.param w_c=100p a_off=3n a_on=0n
.func f_off(w) {exp(-exp( (w-a_off)/w_c))}
.func f_on(w) {exp(-exp( -(w-a_on)/w_c))}
.func G_off(v) {k_off*pow( (v/v_off-1),alpha_off)*u(v-v_off)}
.func G_on(v) {k_on*pow( (v/v_on-1) ,alpha_on)*u(v_on-v)}
.func vs(v,w) {v/(1+(lambda-1)*(w_off-w)/(w_off-w_on))}
.param lambda=(R_off/R_on)
.ic V(w)={w_init}
.model idealD D(Ron=1f Roff=100G Vfwd=0.1f)
.param w_init=0.01n
.func vs1(v,w) {v*  exp( -ln(lambda)*(w_off-w)/(w_off-w_on) ) }
.ends vteam_knowm

.model D D
.lib C:\users\maximilianb\Documents\LTspiceXVII\lib\cmp\standard.dio
.tran 240u
.model MYSW SW(Ron=1n Roff=1000meg Vt=.5)
.param R_g=40k
.backanno
.end
